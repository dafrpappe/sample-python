pipeline {
  agent { 
    dockerfile {
      args '-u root'
    } 
  } 
  stages {    
    stage('Publish on github'){

        steps{
            sh '''
               echo "${PASSWORD}"

               '''


        }
    }
    stage('Build artifact'){

      steps {
        script {

        sh '''

           echo "Publishing on Github..."
           

           git config --global --add safe.directory /home/admin/workspace/python-jenkinsfile  

           # Get the last tag name
          '''
          env.TAG = sh( script: 'git describe --tags', returnStdout: true ).trim()
          env.NAME = sh( script: 'echo "tags-test"', returnStdout: true ).trim()
          env.DESCRIPTION = sh( script: 'echo "this-is-a-test-67"', returnStdout: true ).trim()
    
        sh '''
           echo ${env.NAME}
           echo ${env.TAG}
           echo "Creating tag release..."
           token="${PASSWORD}"
           release=$(curl -X POST -H "Authorization:token ${token}" \
                              --data '{ \"tag_name\" : \"${env.TAG }\"
                                      , \"target_commitish\" : \"main\" 
                                      , \"name\" : \"${env.NAME}\
                                      , \"body\" : \${env.DESCRIPTION}\"
                                      , \"draft\" : false
                                      , \"prerelease\" : true }' "https://api.github.com/repos/dafrpappe/sample-python/releases" )

           id=$(echo "${release}" | python3 -c "import sys, json; print(json.load(sys.stdin)['id'])" )
           
           # Upload the artifact
           curl -X POST -H "Authorization:token ${token}" \
                        -H "Content-Type:application/octet-stream"  https://uploads.github.com/repos/dafrpappe/sample-python/releases/${id}/assets?name=artifact.zip

           echo "DONE"


        '''          

        }
      }    
    }
    stage('Build') {
      steps {
        // Clean before build
        sh '''
           echo "Building artifact ....."

        '''

      }
    }    
  }
}