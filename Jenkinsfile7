pipeline {
  agent { 
    dockerfile {
      args '-u root'
    } 
  } 
  stages {    
    stage('Publish on github'){
        steps{
            sh '''
               echo "S${PASSWORD}"
               ls -l

               '''


        }
    }
    stage('Build artifact'){
      steps {
        sh '''
           echo "Publishing on Github..."


           token="${params.PASSWORD}"
           
           # Get the last tag name
           tag=$(git describe --tags)
           
           # Get the full message associated with this tag
           message="$(git for-each-ref refs/tags/$tag --format='%(contents)')"
           
           name="tags-test"
           description="this is a test 67"



           # Create a release
           release=$(curl -X POST -H "Authorization:token ${token}" --data '{"tag_name": "$tag", "target_commitish": "main", "name": "$name", "body": "$description", "draft": false, "prerelease": true}' https://api.github.com/repos/dafrpappe/sample-python/releases)

           id=$(echo "$release" | python -c "import sys, json; print(json.load(sys.stdin)['id'])"
           
           # Upload the artifact
           curl -X POST -H "Authorization:token $token" -H "Content-Type:application/octet-stream"  https://uploads.github.com/repos/dafrpappe/sample-python/releases/${id}/assets?name=artifact.zip

           echo "DONE"


        '''
      }    
    }
    stage('Build') {
      steps {
        // Clean before build
        sh '''
           echo "Building artifact ....."

        '''

      }
    }    
  }
}